fun void main() {
    
    int: linhas1;
    int: colunas1;
    int: linhas2;
    int: colunas2;
    
    print("Digite o número de linhas da primeira matriz:");
    read(linhas1);
    print("Digite o número de colunas da primeira matriz:");
    read(colunas1);
    
    print("Digite o número de linhas da segunda matriz:");
    read(linhas2);
    print("Digite o número de colunas da segunda matriz:");
    read(colunas2);
    
    // Validação das dimensões
    if (linhas1 <= 0 || colunas1 <= 0) {
        print("ERRO: Dimensões da primeira matriz inválidas!\n");
    } else {
        if (linhas2 <= 0 || colunas2 <= 0) {
            print("ERRO: Dimensões da segunda matriz inválidas!\n");
        } else {
            print("Primeira matriz: ", linhas1, "x", colunas1);
            print("Segunda matriz: ", linhas2, "x", colunas2);
            
            // Declaração das matrizes
            int: tamanho1 = linhas1 * colunas1;
            int: tamanho2 = linhas2 * colunas2;
            
            int[]: matriz1; // Primeira matriz
            int[]: matriz2; // Segunda matriz
            
            // LEITURA DAS MATRIZES
            print("Lendo matriz ", linhas1, "x", colunas1);
            
            for (int: i = 0; i < linhas1; i++) {
                for (int: j = 0; j < colunas1; j++) {
                    print("Digite o elemento [", i, ",", j, "]:");
                    int: pos = i * colunas1 + j;
                    read(matriz1[pos]);
                }
            }
            
            print("Lendo matriz ", linhas2, "x", colunas2);
            
            for (int: i = 0; i < linhas2; i++) {
                for (int: j = 0; j < colunas2; j++) {
                    print("Digite o elemento [", i, ",", j, "]:");
                    int: pos = i * colunas2 + j;
                    read(matriz2[pos]);
                }
            }
            
            // IMPRESSÃO DAS MATRIZES LIDAS
            print("\n Matrizes Lidas: \n");
            print("Matriz A:");
            for (int: i = 0; i < linhas1; i++) {
                for (int: j = 0; j < colunas1; j++) {
                    int: pos = i * colunas1 + j;
                    print(matriz1[pos], " ");
                }
                print("\n"); // Nova linha após cada linha da matriz
            }
            
            print("Matriz B:");
            for (int: i = 0; i < linhas2; i++) {
                for (int: j = 0; j < colunas2; j++) {
                    int: pos = i * colunas2 + j;
                    print(matriz2[pos], " ");
                }
                print("\n"); // Nova linha após cada linha da matriz
            }
            
            // TESTE DE SOMA DE MATRIZES
            bool: podesomarLinhas = (linhas1 == linhas2);
            bool: podesomarColunas = (colunas1 == colunas2);
            bool: podeSomar = podesomarLinhas && podesomarColunas;
            
            if (podeSomar) {
                print("Soma possível: as matrizes têm as mesmas dimensões");
                
                int[]: matrizSoma; // Matriz resultado da soma
                
                for (int: i = 0; i < linhas1; i++) {
                    for (int: j = 0; j < colunas1; j++) {
                        int: pos = i * colunas1 + j;
                        matrizSoma[pos] = matriz1[pos] + matriz2[pos];
                    }
                }
                
                print("RESULTADO DA SOMA (A + B):");
                for (int: i = 0; i < linhas1; i++) {
                    for (int: j = 0; j < colunas1; j++) {
                        int: pos = i * colunas1 + j;
                        print(matrizSoma[pos], " ");
                    }
                    print("\n"); // Nova linha após cada linha da matriz
                }
                
            } else {
                print("ERRO: Não é possível somar as matrizes.");
                print("Para somar, as matrizes devem ter as mesmas dimensões.");
                print("Matriz A:", linhas1, "x", colunas1);
                print("Matriz B:", linhas2, "x", colunas2);
            }
            
            // TESTE DE MULTIPLICAÇÃO DE MATRIZES
            
            bool: podeMultiplicar = (colunas1 == linhas2);
            
            if (podeMultiplicar) {
                print("Multiplicação possível: A[", linhas1, "x", colunas1, "] x B[", linhas2, "x", colunas2, "]");
                
                int: linhasResultado = linhas1;
                int: colunasResultado = colunas2;
                print("Matriz resultado terá dimensões:", linhasResultado, "x", colunasResultado);
                
                int[]: matrizProduto; // Matriz resultado da multiplicação
                
                // Algoritmo de multiplicação de matrizes
                for (int: i = 0; i < linhas1; i++) {
                    for (int: j = 0; j < colunas2; j++) {
                        int: soma = 0;
                        
                        for (int: k = 0; k < colunas1; k++) {
                            int: posM1 = i * colunas1 + k;
                            int: posM2 = k * colunas2 + j;
                            soma = soma + (matriz1[posM1] * matriz2[posM2]);
                        }
                        
                        int: posResultado = i * colunas2 + j;
                        matrizProduto[posResultado] = soma;
                    }
                }
                
                print("RESULTADO DA MULTIPLICAÇÃO (A x B):");
                for (int: i = 0; i < linhasResultado; i++) {
                    for (int: j = 0; j < colunasResultado; j++) {
                        int: pos = i * colunasResultado + j;
                        print(matrizProduto[pos], " ");
                    }
                    print("\n"); // Nova linha após cada linha da matriz
                }
                
            } else {
                print("ERRO: Não é possível multiplicar as matrizes.");
                print("Para multiplicar A x B, o número de colunas de A deve ser");
                print("igual ao número de linhas de B.");
                print("Matriz A:", linhas1, "x", colunas1, "(colunas:", colunas1, ")");
                print("Matriz B:", linhas2, "x", colunas2, "(linhas:", linhas2, ")");
            }
            
        }
    }
    
}
