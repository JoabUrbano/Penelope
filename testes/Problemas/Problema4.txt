// Nota: Penelope não suporta structs customizados, então usaremos int[2]
// onde rational[0] = numerador e rational[1] = denominador

fun int[] criar_racional(int: a, int: b) {
    int[]: resultado = [0, 0];
    resultado[0] = a;  // numerador
    resultado[1] = b;  // denominador
    return resultado;
}

fun bool eh_igual_racional(int[]: a, int[]: b) {
    // Dois racionais a/b e c/d são iguais se a*d == b*c
    return (a[0] * b[1]) == (b[0] * a[1]);
}


// Soma: a/b + c/d = (a*d + b*c)/(b*d)
fun int[] somar_racionais(int[]: a, int[]: b) {
    int[]: resultado = [0, 0];
    resultado[0] = a[0] * b[1] + a[1] * b[0];  // numerador
    resultado[1] = a[1] * b[1];                // denominador
    return resultado;
}

// Negação: -(a/b) = (-a)/b
fun int[] negar_racional(int[]: a) {
    int[]: resultado = [0, 0];
    resultado[0] = -a[0];  // numerador negativo
    resultado[1] = a[1];   // denominador igual
    return resultado;
}

// Subtração: a/b - c/d = (a*d - b*c)/(b*d)
fun int[] subtrair_racionais(int[]: a, int[]: b) {
    int[]: resultado = [0, 0];
    resultado[0] = a[0] * b[1] - a[1] * b[0];  // numerador
    resultado[1] = a[1] * b[1];                // denominador
    return resultado;
}

// Multiplicação: (a/b) * (c/d) = (a*c)/(b*d)
fun int[] multiplicar_racionais(int[]: a, int[]: b) {
    int[]: resultado = [0, 0];
    resultado[0] = a[0] * b[0];  // numerador
    resultado[1] = a[1] * b[1];  // denominador
    return resultado;
}

// Inverso: 1/(a/b) = b/a
fun int[] inverso_racional(int[]: a) {
    int[]: resultado = [0, 0];
    resultado[0] = a[1];  // numerador vira denominador
    resultado[1] = a[0];  // denominador vira numerador
    return resultado;
}

// Divisão: (a/b) / (c/d) = (a/b) * (d/c)
fun int[] dividir_racionais(int[]: a, int[]: b) {
    int[]: resultado = [0, 0];
    resultado[0] = a[0] * b[1];  // numerador
    resultado[1] = a[1] * b[0];  // denominador
    return resultado;
}

fun void main() {
    print("TESTE DE NÚMEROS RACIONAIS:\n");
    
    // Criar alguns números racionais para teste
    int[]: r1 = criar_racional(3, 4);    // 3/4
    int[]: r2 = criar_racional(2, 5);    // 2/5
    int[]: r3 = criar_racional(6, 8);    // 6/8 (igual a 3/4)
    
    print("Racional 1: ", r1[0], "/", r1[1], "\n");
    print("Racional 2: ", r2[0], "/", r2[1], "\n");
    print("Racional 3: ", r3[0], "/", r3[1], "\n");
    
    // Teste de igualdade
    print("\nTESTE DE IGUALDADE:\n");
    if (eh_igual_racional(r1, r3)) {
        print("r1 e r3 são iguais (correto: 3/4 = 6/8)\n");
    } else {
        print("r1 e r3 são diferentes\n");
    }
    
    if (eh_igual_racional(r1, r2)) {
        print("r1 e r2 são iguais\n");
    } else {
        print("r1 e r2 são diferentes (correto: 3/4 ≠ 2/5)\n");
    }
    
    // Teste das operações
    print("\nOPERAÇÕES ARITMÉTICAS:\n");
    
    // Soma
    int[]: soma = somar_racionais(r1, r2);
    print("Soma (3/4 + 2/5): ", soma[0], "/", soma[1], "\n");
    
    // Negação
    int[]: neg = negar_racional(r1);
    print("Negação de 3/4: ", neg[0], "/", neg[1], "\n");
    
    // Subtração
    int[]: sub = subtrair_racionais(r1, r2);
    print("Subtração (3/4 - 2/5): ", sub[0], "/", sub[1], "\n");
    
    // Multiplicação
    int[]: mult = multiplicar_racionais(r1, r2);
    print("Multiplicação (3/4 * 2/5): ", mult[0], "/", mult[1], "\n");
    
    // Inverso
    int[]: inv = inverso_racional(r1);
    print("Inverso de 3/4: ", inv[0], "/", inv[1], "\n");
    
    // Divisão
    int[]: div = dividir_racionais(r1, r2);
    print("Divisão (3/4 ÷ 2/5): ", div[0], "/", div[1], "\n");
    
}